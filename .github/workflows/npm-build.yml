name: GitHub Pages Deploy
on:
    push:
        branches:
            - master
            - dev
            - release/*
    pull_request:
        branches:
            - master
            - dev
    workflow_dispatch:
        cancel-in-progress: true

jobs:
    dump_contexts_to_log:
        runs-on: ubuntu-latest
        steps:
            - name: Dump GitHub context
              id: github_context_step
              run: echo '${{ toJSON(github) }}'
            - name: Dump job context
              run: echo '${{ toJSON(job) }}'
            - name: Dump steps context
              run: echo '${{ toJSON(steps) }}'
            - name: Dump runner context
              run: echo '${{ toJSON(runner) }}'
            - name: Dump strategy context
              run: echo '${{ toJSON(strategy) }}'
            - name: Dump matrix context
              run: echo '${{ toJSON(matrix) }}'

    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              name: Setup Node
            - uses: actions/setup-node@v3
              with:
                  token: ${{ secrets.GH_TOKEN }}
                  node-version: 16

            - run: echo RUNNER ${{ toJSON(runner) }}

            - name: Generate files
              run: |
                  mkdir artifact && mkdir artifact2
                  cd artifact &&
              if: cd ../script/new-artifact.sh
                  echo ls
              shell: bash

            - name: Upload Pages artifact
              uses: ./
              with:
                  path: artifact
                  working-directory: scripts

            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                  name: github-pages
                  path: artifact2

            - name: Extract artifact
              run: tar -xf artifact2/artifact.tar -C artifact2 && rm artifact2/artifact.tar
              shell: bash

            - name: Compare files
              run: diff -qr artifact artifact2
              shell: bash

            - name: Check for absence of symlinks
              run: if [ $(find artifact2 -type l | wc -l) != 0 ]; then echo "Symlinks found"; exit 1; fi
              shell: bash

            - uses: actions/checkout@v3
            - uses: actions/download-artifact@v3
              with:
                  name: my-artifact
                  path: path/to/artifact

            - name: Display structure of downloaded files
              run: ls -R
              working-directory: path/to/artifact

            - uses: actions/download-artifact@v3
              with:
                  name: my-artifact
                  path: ~/download/path

            - uses: actions/checkout@v3
            - uses: actions/download-artifact@v3
              with:
                  path: path/to/artifacts

            - name: Display structure of downloaded files
              run: ls -R
              working-directory: path/to/artifacts

        permissions:
            contents: write
        concurrency:
            group: ${{ github.workflow }}-${{ github.ref }}

    postbuild:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: "Set Terminal"
              run: ls

            - name: "Console"
              run: echo '${{ toJSON( github.GITHUB_WROKSPACE ) }}'
                  echo '${{ toJSON( steps.deployment.outputs.page_url ) }}'

    install:
        needs: postbuild
        runs-on: ubuntu-latest
        steps:
            - name: Clean install dependencies and build
              run: |
                  npm ci
                  npm run build

    logger:
        needs: postbuild
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source

        # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        # - name: Download artifact
        #     uses: actions/download-artifact@v3
        #         with:
        #         name: github-pages
        #     env:
        #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        #     - name: Setup Node
        #         uses: actions/setup-node@v3
        #         with:
        #             node-version: "14"

        #     - name: 'Console'
        #         run:
        #             echo '${{ toJSON( github.GITHUB_WROKSPACE ) }}'
        #             echo '${{ toJSON( steps.deployment.outputs.page_url ) }}'

        #     - name: Deploy to GitHub Pages
        #         id: deployment
        #         uses: actions/deploy-pages@v1
        #         env:
        #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
