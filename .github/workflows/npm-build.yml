name: GitHub Pages Deploy
on:
    push:
        branches:
            - master
            - dev
            - release/*
    pull_request:
        branches:
            - master
            - dev
    workflow_dispatch:
        cancel-in-progress: true

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/setup-node@v1
              with:
                  node-version: "12"
            - run: npm install
            - run: npm run build
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Save public folder
              uses: actions/upload-artifact@v2
              with:
                  name: public
                  path: public

            - run: echo ${{ toJSON(github) }}

    build_and_test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: npm install, build, and test
              run: |
                  npm install
                  npm npm test
                  npm start
            - name: Archive production artifacts
              uses: actions/upload-artifact@v3
              with:
                  shell: bash
                  name: dist-without-markdown
                  path: |
                      dist
                      !dist/**/*.md
            # =====================
            - name: Archive code coverage results
              uses: actions/upload-artifact@v3
              with:
                  name: code-coverage-report
                  path: output/test/code-coverage.html

            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  token: ${{ secrets.GH_TOKEN }}
                  node-version: 16
                  working-directory: scripts

            - uses: actions/checkout@v3
            - uses: actions/download-artifact@v3
              with:
                  name: my-artifact
                  path: path/to/artifact
              env:
                  MY_ART: my-artifact

            - name: echo $MY_ART

            # - name: Display structure of downloaded files
            #   run: ls -R
            #   working-directory: path/to/artifact
            #   env:
            #       ARTIFACT: my-artifact

            - name: Generate Files
              run: echo RUNNER ${{ toJSON(runner) }}

            - name: CREATE FOLDER[]
              run: |
                  mkdir artifact &&
                  echo "CREATE ARTIFACT" &&
                  echo ls

            - name: Log
              run: echo ${{ toJSON(runner)}}
              shell: bash

            - name: Complete
              run: mkdir artifact2 &&
                  cd artifact &&
                  cd ../script/new-artifact.sh
                  echo ls

            - name: Upload Pages Artifact
              uses: ./
              with:
                  path: artifact

            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                  name: github-pages
                  path: artifact2

            - name: Extract artifact
              run: tar -xf artifact2/artifact.tar -C artifact2 && rm artifact2/artifact.tar

            - name: Compare files
              run: diff -qr artifact artifact2
              shell: bash

            - name: Check for absence of symlinks
              run: if [ $(find artifact2 -type l | wc -l) != 0 ]; then echo "Symlinks found"; exit 1; fi
              shell: bash

            - uses: actions/checkout@v3
            - uses: actions/download-artifact@v3
              with:
                  name: my-artifact
                  path: path/to/artifact

            - name: Display structure of downloaded files
              run: ls -R
              working-directory: path/to/artifact

            - uses: actions/download-artifact@v3
              with:
                  name: my-artifact
                  path: ~/download/path

            - uses: actions/checkout@v3
            - uses: actions/download-artifact@v3
              with:
                  path: path/to/artifacts

            - name: Display structure of downloaded files
              run: ls -R
              working-directory: path/to/artifacts

        permissions:
            contents: write
        concurrency:
            group: ${{ github.workflow }}-${{ github.ref }}

    install:
        needs: postbuild
        runs-on: ubuntu-latest
        steps:
            - name: Clean install dependencies and build
              run: |
                  npm ci
                  npm run build

    logger:
        needs: postbuild
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source

        # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        # - name: Download artifact
        #     uses: actions/download-artifact@v3
        #         with:
        #         name: github-pages
        #     env:
        #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        #     - name: Setup Node
        #         uses: actions/setup-node@v3
        #         with:
        #             node-version: "14"

        #     - name: 'Console'
        #         run:
        #             echo '${{ toJSON( github.GITHUB_WROKSPACE ) }}'
        #             echo '${{ toJSON( steps.deployment.outputs.page_url ) }}'

        #     - name: Deploy to GitHub Pages
        #         id: deployment
        #         uses: actions/deploy-pages@v1
        #         env:
        #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
