on:
    push:
        branches:
            - master
            - dev
            - release/*
    pull_request:
        branches:
            - master
            - dev
    workflow_dispatch:

jobs:
    prebuild:
        runs-on: ubuntu-latest
        # Test first action
        steps:
            - name: Create Files
              uses: actions/checkout@v3
              with:
                  path: ${{ github.GITHUB_WORKSPACE }}

    dump_contexts_to_log:
        runs-on: ubuntu-latest
        steps:
            - name: Dump GitHub context
              id: github_context_step
              run: echo '${{ toJSON(github) }}'
            - name: Dump job context
              run: echo '${{ toJSON(job) }}'
            - name: Dump steps context
              run: echo '${{ toJSON(steps) }}'
            - name: Dump runner context
              run: echo '${{ toJSON(runner) }}'
            - name: Dump strategy context
              run: echo '${{ toJSON(strategy) }}'
            - name: Dump matrix context
              run: echo '${{ toJSON(matrix) }}'

    build:
        needs: prebuild
        runs-on: ubuntu-latest
        steps:
            - uses: actions/setup-node@v3
              with:
                  id: myVar;

            - uses: actions/setup-node@v3
              with:
                  token: ${{ toJSON( secrets.GH_TOKEN ) }}
                  node-version: 16

            - name: echo Ref
              run: echo ${{ toJSON( github.ref ) }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Generate files
              run: mkdir artifact && mkdir artifact2 && cd artifact && ../script/new-artifact.sh
              shell: bash

            - name: Upload Pages artifact
              uses: ./
              with:
                  path: artifact
                  working-directory: scripts

            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                  name: github-pages
                  path: artifact2

            - name: Extract artifact
              run: tar -xf artifact2/artifact.tar -C artifact2 && rm artifact2/artifact.tar
              shell: bash

            - name: Compare files
              run: diff -qr artifact artifact2
              shell: bash

            - name: Check for absence of symlinks
              run: if [ $(find artifact2 -type l | wc -l) != 0 ]; then echo "Symlinks found"; exit 1; fi
              shell: bash

            - uses: actions/checkout@v2

            - uses: actions/download-artifact@v3
              with:
                  name: my-artifact
                  path: path/to/artifact

            - name: Display structure of downloaded files
              run: ls -R
              working-directory: path/to/artifact

            - uses: actions/download-artifact@v3
              with:
                  name: my-artifact
                  path: ~/download/path

            - uses: actions/checkout@v2
            - uses: actions/download-artifact@v3
              with:
                  path: path/to/artifacts

            - name: Display structure of downloaded files
              run: ls -R
              working-directory: path/to/artifacts

        permissions:
            contents: write
        concurrency:
            group: ${{ github.workflow }}-${{ github.ref }}

        steps: 
            - name: 'Check Group'
              uses: echo ${{ group }}
